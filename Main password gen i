import random
import time
import sys

print("""                                                                               TM
    __________  __  _________                                              __    
   / ____/ __ \/  |/  / ____/___  ____ ____________      ______  _________/ /____
  / __/ / /_/ / /|_/ / / __/ __ \/ __ `/ ___/ ___/ | /| / / __ \/ ___/ __  / ___/
 / /___/ ____/ /  / / /_/ / /_/ / /_/ (__  |__  )| |/ |/ / /_/ / /  / /_/ (__  ) 
/_____/_/   /_/  /_/\____/ .___/\__,_/____/____/ |__/|__/\____/_/   \__,_/____/  
                        /_/                                                      """)
print("Extra Password Management and Generator by DOT-EXECUTE")
print("over 400,000 possible conbineations\n")                              
#The logo and primary opening text both shown to the user on start up

key_words = ["achieve", "process", "falsify" ,"bite", "freedom", "ant", "dough", "raw", "recycle", "speech", "arise", "execute", "lily", "promotion", "deputy", "jaw", "genetic" ,"safari", "perceive", "memory"]

sec_words = ["nonremittal", "perform", "chair", "bird", "rhetoric", "say", "conclusion", "sickness", "maze", "replacement", "support", "tree", "bake", "rob", "platform", "limited", "bold" ,"shell", "application", "reverse"]

upper_S = ["A", "B","C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "O", "P", "Q", "R", "S", "T","U", "V", "W", "X", "Y", "Z"]

lower_S = ["a","b","c","d","e","f","g","h","i","j","k","l","m","o","p","q","r","s","t","u","v","w","x","y","z"]

symbols = ["!","@","#","$","%","^","&","*","~","?"]
#Above are the lists used for password generator including both the primary and secondry words below them are the list for the specialty characters 

print("passwords are something not to mess around with, so dont share them, if you did leak your password are need a new one here are some :). \n")
#The secondrey opening text shown to the user on start up

time.sleep(2.5)
n=3

prompt_answer = input("would you like to create a strong (less memorable) password [yes/no]\n")
if prompt_answer in ["Yes", "yes", "Y", "y"]:
  rim_rand_words_S1 = (random.sample(upper_S, n)) 
  sec_rand_words_S = (random.sample(lower_S, n)) 
  specials_S = (random.choice(symbols))
  rim_rand_words_S2 = (random.sample(upper_S, n)) 
  #The varibles requied to have upper and lower case letters as well as the prompt accosiated with them

  print(random.choice(rim_rand_words_S1), end = " ")
  print(random.choice(range(0, 50)))
  print(random.choice(sec_rand_words_S), end = " ")
  print(random.choice(specials_S), end = " ")
  print(random.choice(rim_rand_words_S2), end = " \n")
  print(random.choice(range(0, 50)))
  print(random.choice(range(0, 50)))
  print(random.choice(range(0, 50)))
#The code used to print the strong password
  
  print("please note that all other formats were uniplicible, this was the best format found")

  time.sleep(0.5)
  print("\n")
  
  sys.exit("strong password created")
else:
  print("contiueing with memorable passwords\n")

#add option for less memerable passwords

prim_rand_words1 = (random.choice(key_words)) 
rand_numbers1 = (random.choice(range(1, 100)))
sec_rand_words1 = (random.choice(sec_words)) 
specials1 = (random.choice(symbols))

print(prim_rand_words1, sec_rand_words1, rand_numbers1, specials1)

time.sleep(1.5)

prim_rand_words2 = (random.choice(key_words)) 
rand_numbers2 = (random.choice(range(1, 100)))
sec_rand_words2 = (random.choice(sec_words)) 
specials2 = (random.choice(symbols))

print(prim_rand_words2, sec_rand_words2, specials2, rand_numbers2)

time.sleep(1.5)

prim_rand_words3 = (random.choice(key_words)) 
rand_numbers3 = (random.choice(range(1, 100)))
sec_rand_words3 = (random.choice(sec_words)) 
specials3 = (random.choice(symbols))

print(prim_rand_words3, sec_rand_words3, rand_numbers3, specials3)
#The code above is used for both selecting and printing the words for password generation

answer1 = input("generate more passwords? [yes/no]\n")
print("\n")
#The first prompt users will see to generate more passwords

if answer1 in ["yes","Yes","y","Y"]:
  print("secondrey password batch")
  prim_rand_words_re1 = (random.choice(key_words)) 
  rand_numbers_re1 = (random.choice(range(1, 100)))
  sec_rand_words_re1 = (random.choice(sec_words)) 
  specials_re1 = (random.choice(symbols))

  print(prim_rand_words_re1, sec_rand_words_re1, rand_numbers_re1, specials_re1)

  time.sleep(1.5)

  prim_rand_words_re2 = (random.choice(key_words)) 
  rand_numbers_re2 = (random.choice(range(1, 100)))
  sec_rand_words_re2 = (random.choice(sec_words)) 
  specials_re2 = (random.choice(symbols))

  print(prim_rand_words_re2, sec_rand_words_re2, specials_re2, rand_numbers_re2)
  #The code above is used for both selecting and printing the words for password generation from the first restart prompted by the prompt 

else:
  sys.exit("program stoped")
#Above is first lot of the code used to stop the program

answer2 = input("generate one more password? [yes/no]\n")
#The first prompt users will see to generate more passwords

if answer2 in ["yes","Yes","y","Y"]:
  print("tertiary password batch")
  prim_rand_words_re3 = (random.choice(key_words)) 
  rand_numbers_re3 = (random.choice(range(1, 100)))
  sec_rand_words_re3 = (random.choice(sec_words)) 
  specials_re3 = (random.choice(symbols))
  print(prim_rand_words_re3, sec_rand_words_re3, rand_numbers_re3, specials_re3)

  time.sleep(1.5)

  prim_rand_words_re4 = (random.choice(key_words)) 
  rand_numbers_re4 = (random.choice(range(1, 100)))
  sec_rand_words_re4 = (random.choice(sec_words)) 
  specials_re4 = (random.choice(symbols))
  print(prim_rand_words_re4, sec_rand_words_re4, rand_numbers_re4, specials_re4)
#The code above is used for both selecting and printing the words for password generation from the first restart prompted by the prompt

else:
  sys.exit("program stoped")
#Above is first lot of the code used to stop the program
